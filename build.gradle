buildscript {
    repositories { mavenCentral() }
    dependencies { classpath group:'org.ajoberstar', name:'gradle-git', version:'0.6.4' }
}
import org.ajoberstar.gradle.git.tasks.*

apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'signing'

group = 'org.mythtv.android'
version = '2.0.3'

sourceCompatibility = JavaVersion.VERSION_1_7
targetCompatibility = JavaVersion.VERSION_1_7

def isDevBuild
def isReleaseBuild
def sonatypeRepositoryUrl

//set build variables based on build type (release, development)
if(hasProperty('release')) {
    isReleaseBuild = true
    sonatypeRepositoryUrl = 'https://oss.sonatype.org/service/local/staging/deploy/maven2/'

} else {
    version += '-SNAPSHOT'
    isDevBuild = true
}

repositories {
    mavenCentral()
}

ext {
    jacksonVersion = '2.4.3'
    okHttpVersion = '2.0.0'
    retrofitVersion = '1.9.0'
}

dependencies {
    compile group:'com.google.guava', name:'guava', version:'18.0'
    compile group:'joda-time', name:'joda-time', version:'2.5'
    compile group:'org.joda', name:'joda-convert', version:'1.7'
    compile group:'com.fasterxml.jackson.core', name:'jackson-core', version:project.ext.jacksonVersion
    compile group:'com.fasterxml.jackson.core', name:'jackson-annotations', version:project.ext.jacksonVersion
    compile group:'com.fasterxml.jackson.core', name:'jackson-databind', version:project.ext.jacksonVersion
    compile group:'com.fasterxml.jackson.datatype', name:'jackson-datatype-joda', version:project.ext.jacksonVersion
    compile group:'com.squareup.okhttp', name:'okhttp', version:project.ext.okHttpVersion
    compile group:'com.squareup.okhttp', name:'okhttp-urlconnection', version:project.ext.okHttpVersion
    compile group:'com.squareup.retrofit', name:'retrofit', version:project.ext.retrofitVersion
    compile group:'com.squareup.retrofit', name:'converter-jackson', version:project.ext.retrofitVersion
    testCompile group:'junit', name:'junit', version:'4.11'
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from 'build/docs/javadoc'
}

task sourcesJar(type: Jar) {
    from sourceSets.main.allSource
    classifier = 'sources'
}

task gitTag(type: GitTag) {
    tagName = "mythtv-service-api-${version}"
    message = "Release of mythtv-service-api-${version}"
}
gitTag.doFirst {
    if(!isReleaseBuild)
        throw new StopExecutionException()
}

task gitRelease(type:GitPush, dependsOn:gitTag, description: 'Creates the tag for this release and push it the the remote repository.') {
    credentials {
        username = githubUsername
        password = githubPassword
    }
    pushTags = true
}
gitRelease.doFirst {
    if(!isReleaseBuild)
        throw new StopExecutionException()
}

artifacts {
    archives jar
    archives javadocJar
    archives sourcesJar
}

//********* artifact signing *********
if(isReleaseBuild) {
    signing {
        sign configurations.archives
    }
} else {
    task signArchives {
        // do nothing
    }
}

uploadArchives {
    repositories {
        if (isDevBuild) {
                mavenLocal()
            }
            else {
            mavenDeployer {
                beforeDeployment { MavenDeployment deployment -> signPom(deployment) }

                repository(url: sonatypeRepositoryUrl) {
                    authentication(userName: sonatypeUsername, password: sonatypePassword)
                }

                pom.project {
                    name 'MythTV-Service-API'
                    packaging 'jar'
                    description 'MythTV Services API for java'
                    url ' https://github.com/MythTV-Clients/MythTV-Service-API'

                    scm {
                        url 'git@github.com:MythTV-Clients/MythTV-Service-API.git'
                        connection 'scm:git:git@github.com:MythTV-Clients/MythTV-Service-API.git'
                        developerConnection 'scm:git:git@github.com:MythTV-Clients/MythTV-Service-API.git'
                    }

                    licenses {
                        license {
                            name 'Apache License Version 2.0, January 2004'
                            url 'http://www.apache.org/licenses/LICENSE-2.0.html'
                            distribution 'repo'
                        }
                    }

                    developers {
                        developer {
                            id 'dmfrey'
                            name 'Daniel Frey'
                        }
                        developer {
                            id 'tafypz'
                            name 'Sebastien Astie'
                        }
                    }
                }
            }
        }
    }
}
